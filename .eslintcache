[{"D:\\Referee\\referee\\src\\index.js":"1","D:\\Referee\\referee\\src\\App.js":"2","D:\\Referee\\referee\\src\\components\\Login.js":"3","D:\\Referee\\referee\\src\\components\\OffersHome.js":"4","D:\\Referee\\referee\\src\\components\\AddOffer.js":"5","D:\\Referee\\referee\\src\\components\\SignUp.js":"6","D:\\Referee\\referee\\src\\components\\Home.js":"7","D:\\Referee\\referee\\src\\components\\EditOffer.js":"8","D:\\Referee\\referee\\src\\components\\OfferCustomer.js":"9","D:\\Referee\\referee\\src\\components\\Nav.js":"10","D:\\Referee\\referee\\src\\contexts\\LoginContext.js":"11","D:\\Referee\\referee\\src\\components\\CustomChatbot.js":"12"},{"size":220,"mtime":1608502073410,"results":"13","hashOfConfig":"14"},{"size":1591,"mtime":1622231137987,"results":"15","hashOfConfig":"14"},{"size":3962,"mtime":1622232709330,"results":"16","hashOfConfig":"14"},{"size":6325,"mtime":1622284381032,"results":"17","hashOfConfig":"14"},{"size":6559,"mtime":1622003749863,"results":"18","hashOfConfig":"14"},{"size":9797,"mtime":1621892955098,"results":"19","hashOfConfig":"14"},{"size":948,"mtime":1622002113934,"results":"20","hashOfConfig":"14"},{"size":3333,"mtime":1622005224689,"results":"21","hashOfConfig":"14"},{"size":3307,"mtime":1608689456750,"results":"22","hashOfConfig":"14"},{"size":9108,"mtime":1622063305324,"results":"23","hashOfConfig":"14"},{"size":2164,"mtime":1622285648188,"results":"24","hashOfConfig":"14"},{"size":1272,"mtime":1622233552714,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1sv8j7k",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Referee\\referee\\src\\index.js",[],["54","55"],"D:\\Referee\\referee\\src\\App.js",[],"D:\\Referee\\referee\\src\\components\\Login.js",["56","57"],"import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { LoginContext } from '../contexts/LoginContext'\r\n\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport 'fontsource-roboto';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fieldStyle: {\r\n    width: '350px',\r\n    '&:hover': {\r\n      outlineColor: '#2EC4B6',\r\n    }\r\n  },\r\n  buttonStyle: {\r\n    width: '350px',\r\n    backgroundColor: '#2EC4B6',\r\n    color: '#FFF',\r\n    fontFamily: 'Segoe UI',\r\n    fontWeight: 'bold',\r\n    '&:hover': {\r\n      color: '#2EC4B6',\r\n      backgroundColor: '#fff',\r\n      border: '2px solid #2EC4B6'\r\n    }\r\n  },\r\n  buttonStyleGoogle: {\r\n    width: '350px',\r\n    backgroundColor: '#FF3E30',\r\n    color: '#FFF',\r\n    fontFamily: 'Segoe UI',\r\n    fontWeight: 'bold',\r\n    // '&:hover': {\r\n    //   color: '#2EC4B6',\r\n    //   backgroundColor: '#fff',\r\n    //   border: '2px solid #2EC4B6'\r\n    // }\r\n  },\r\n  buttonStyleFacebook: {\r\n    width: '350px',\r\n    backgroundColor: '#3B5998',\r\n    color: '#FFF',\r\n    fontFamily: 'Segoe UI',\r\n    fontWeight: 'bold',\r\n    '&:hover': {\r\n      color: '#2EC4B6',\r\n      backgroundColor: '#fff',\r\n      border: '2px solid #2EC4B6'\r\n    }\r\n  }\r\n}))\r\n\r\nfunction Login(props) {\r\n  let history = useHistory()\r\n  const { data, changeData, signInLocal, signInGoogle } = useContext(LoginContext) // State Context For User Information\r\n  const classes = useStyles()\r\n\r\n  const validateData = (email, password) => {\r\n    if (re.test(email)) {\r\n      setError(false)\r\n      return true\r\n    }\r\n    else setError(true)\r\n  }\r\n\r\n  // Navigate After Data Is Updated\r\n  useEffect(\r\n    () => {\r\n      if (data !== '') {\r\n        history.push('/offerBusiness')\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n  const [error, setError] = React.useState(false)\r\n\r\n  const handleEmail = (event) => {\r\n    setEmail(event.target.value)\r\n  }\r\n  const handlePassword = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;  // Email Regex\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <span className=\"back-button\">\r\n        <IconButton onClick={() => props.handleScreen('home')}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      </span>\r\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <TextField className={classes.fieldStyle} variant=\"outlined\" label=\"Email Address\" onChange={handleEmail}\r\n            error={error}\r\n            helperText={error ? \"Please enter a valid email.\" : \"\"} />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField className={classes.fieldStyle} variant=\"outlined\" label=\"Password\" type=\"password\" onChange={handlePassword} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button className={classes.buttonStyle} variant=\"outlined\"\r\n            onClick={() => {\r\n              console.log('click')\r\n              signInLocal(email, password)\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button className={classes.buttonStyle} variant=\"outlined\">Forgot Password</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button className={classes.buttonStyleGoogle} variant=\"outlined\" onClick={() => {console.log('click');signInGoogle();}}>Login With Google</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button className={classes.buttonStyleFacebook} variant=\"outlined\">Login With Facebook</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Referee\\referee\\src\\components\\OffersHome.js",["58","59"],"D:\\Referee\\referee\\src\\components\\AddOffer.js",[],"D:\\Referee\\referee\\src\\components\\SignUp.js",[],"D:\\Referee\\referee\\src\\components\\Home.js",[],"D:\\Referee\\referee\\src\\components\\EditOffer.js",[],"D:\\Referee\\referee\\src\\components\\OfferCustomer.js",[],["60","61"],"D:\\Referee\\referee\\src\\components\\Nav.js",["62","63","64","65"],"import React from 'react';\r\nimport '../App.css';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport logo from '../assets/referee-logo-bg.png'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HeadsetMicIcon from '@material-ui/icons/HeadsetMic';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { LoginContext } from '../contexts/LoginContext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    topBar : {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        backgroundColor: '#2ec4b6',\r\n        // height: '73px'\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginRight: 30,\r\n        marginTop: 10,\r\n        fontSize: 'large'\r\n    },\r\n    hide: {\r\n        display: \"none\"\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        backgroundColor: '#2ec4b6',\r\n\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        backgroundColor: '#2ec4b6',\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    textStyle: {\r\n        color: \"#fff\"\r\n    }\r\n}));\r\n\r\nfunction Nav() {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const { data } = React.useContext(LoginContext)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open\r\n                })}\r\n            >\r\n                <Toolbar className={classes.topBar}>\r\n                    <div style={{display: 'flex'}}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, {\r\n                                [classes.hide]: open\r\n                            })}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            <img alt=\"\" style={{ marginTop: '8px', width: '180px', height: '43px' }} src={logo} />\r\n                        </Typography>\r\n                    </div>\r\n                    <Avatar alt=\"\" style={{marginTop: '5px', marginRight: \"10px\" }} src=\"https://lh3.googleusercontent.com/TwHrwftk8BaWEV4swcWDtdcg1halIcT2U3EWkXYkDyYPXmufMLtn1DJG569HIIsd4ty4=s630-fcrop64=1,2202423de15ce329\" />\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open\r\n                    })\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon htmlColor={\"#fff\"} />\r\n                        ) : (\r\n                            <ChevronLeftIcon htmlColor={\"#fff\"} />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <Link to=\"/offerBusiness\" style={{ textDecoration: 'none' }}>\r\n\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <HomeIcon htmlColor={\"#fff\"} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Home\"} className={classes.textStyle} />\r\n                    </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <LocalMallIcon htmlColor={\"#fff\"} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"My Offers\"} className={classes.textStyle} />\r\n                        </ListItem>\r\n                    </Link>\r\n\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon htmlColor={\"#fff\"} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Settings\"} className={classes.textStyle} />\r\n                    </ListItem>\r\n\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <HeadsetMicIcon htmlColor={\"#fff\"} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Support\"} className={classes.textStyle} />\r\n                    </ListItem>\r\n\r\n                    \r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <TrendingUpIcon htmlColor={\"#fff\"} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Analytics\"} className={classes.textStyle} />\r\n                    </ListItem>\r\n\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <ExitToAppIcon htmlColor={\"#fff\"} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Sign Out\"} className={classes.textStyle} />\r\n                    </ListItem>\r\n\r\n\r\n                </List>\r\n                {/* <Divider />\r\n                <List>\r\n                    {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} className={classes.textStyle} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List> */}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav","D:\\Referee\\referee\\src\\contexts\\LoginContext.js",[],"D:\\Referee\\referee\\src\\components\\CustomChatbot.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":60,"column":17,"nodeType":"72","messageId":"73","endLine":60,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":63,"column":9,"nodeType":"72","messageId":"73","endLine":63,"endColumn":21},{"ruleId":"70","severity":1,"message":"75","line":11,"column":8,"nodeType":"72","messageId":"73","endLine":11,"endColumn":21},{"ruleId":"70","severity":1,"message":"76","line":14,"column":63,"nodeType":"72","messageId":"73","endLine":14,"endColumn":73},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"79","line":24,"column":8,"nodeType":"72","messageId":"73","endLine":24,"endColumn":17},{"ruleId":"70","severity":1,"message":"80","line":25,"column":8,"nodeType":"72","messageId":"73","endLine":25,"endColumn":16},{"ruleId":"70","severity":1,"message":"81","line":31,"column":8,"nodeType":"72","messageId":"73","endLine":31,"endColumn":13},{"ruleId":"70","severity":1,"message":"82","line":121,"column":13,"nodeType":"72","messageId":"73","endLine":121,"endColumn":17},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'changeData' is assigned a value but never used.","Identifier","unusedVar","'validateData' is assigned a value but never used.","'ArrowBackIcon' is defined but never used.","'IconButton' is defined but never used.",["83"],["84"],"'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Paper' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]